generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model languages {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(255)
  slug      String      @db.VarChar(255)
  modifiers modifiers[]
  prompts   prompts[]
  templates templates[]
}

model modifiers {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  slug                String                @db.VarChar(255)
  content             String
  description         String?
  score               Int
  created_at          DateTime              @db.Timestamptz(6)
  technology_id       Int
  user_id             Int
  repository_id       Int
  language_id         Int
  languages           languages             @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  repositories        repositories          @relation(fields: [repository_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  technologies        technologies          @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users               users                 @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prompts_modifiers   prompts_modifiers[]
  templates_modifiers templates_modifiers[]
}

model parameters {
  id                                Int                                 @id @default(autoincrement())
  name                              String                              @db.VarChar(255)
  slug                              String                              @db.VarChar(255)
  prompts_parameters                prompts_parameters[]
  technologies_providers_parameters technologies_providers_parameters[]
}

model prompts {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  slug               String               @db.VarChar(255)
  content            String
  description        String?
  score              Int
  created_at         DateTime             @db.Timestamptz(6)
  technology_id      Int
  provider_id        Int
  user_id            Int
  repository_id      Int
  language_id        Int
  languages          languages            @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  providers          providers            @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  repositories       repositories         @relation(fields: [repository_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  technologies       technologies         @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users              users                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prompts_modifiers  prompts_modifiers[]
  prompts_parameters prompts_parameters[]
}

model prompts_modifiers {
  id          Int       @id @default(autoincrement())
  prompt_id   Int
  modifier_id Int
  modifiers   modifiers @relation(fields: [modifier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prompts     prompts   @relation(fields: [prompt_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model prompts_parameters {
  id           Int        @id @default(autoincrement())
  prompt_id    Int
  parameter_id Int
  value        String?
  parameters   parameters @relation(fields: [parameter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prompts      prompts    @relation(fields: [prompt_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model providers {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(255)
  slug                   String                   @db.VarChar(255)
  default                Boolean?
  prompts                prompts[]
  technologies_providers technologies_providers[]
  templates              templates[]
}

model repositories {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  slug               String?              @db.VarChar(255)
  user_id            Int
  modifiers          modifiers[]
  prompts            prompts[]
  users              users                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  templates          templates[]
  users_repositories users_repositories[]
}

model technologies {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar
  slug                   String                   @db.VarChar
  default                Boolean?
  modifiers              modifiers[]
  prompts                prompts[]
  technologies_providers technologies_providers[]
  templates              templates[]
}

model technologies_providers {
  id                                Int                                 @id @default(autoincrement())
  technology_id                     Int
  provider_id                       Int
  default                           Boolean?
  providers                         providers                           @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  technologies                      technologies                        @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  technologies_providers_parameters technologies_providers_parameters[]
}

model technologies_providers_parameters {
  id                     Int                    @id @default(autoincrement())
  technology_provider_id Int
  parameter_id           Int
  content                Json?                  @db.Json
  parameters             parameters             @relation(fields: [parameter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  technologies_providers technologies_providers @relation(fields: [technology_provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model templates {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  slug                String                @db.VarChar(255)
  content             String?
  description         String?
  score               Int
  created_at          DateTime              @db.Timestamptz(6)
  technology_id       Int
  provider_id         Int
  user_id             Int
  repository_id       Int
  language_id         Int
  languages           languages             @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  providers           providers             @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  repositories        repositories          @relation(fields: [repository_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  technologies        technologies          @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users               users                 @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  templates_modifiers templates_modifiers[]
}

model templates_modifiers {
  id          Int       @id @default(autoincrement())
  template_id Int
  modifier_id Int
  modifiers   modifiers @relation(fields: [modifier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  templates   templates @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                 Int                  @id @default(autoincrement())
  email              String               @db.VarChar(255)
  auth0_id           String?              @unique @db.VarChar(255)
  theme              String?              @db.VarChar(255)
  first_login        Boolean?
  modifiers          modifiers[]
  prompts            prompts[]
  repositories       repositories[]
  templates          templates[]
  users_repositories users_repositories[]
}

model users_repositories {
  id            Int          @id @default(autoincrement())
  user_id       Int
  repository_id Int
  repositories  repositories @relation(fields: [repository_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
