generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CRAFT_TYPE {
  PROMPT
  TEMPLATE
  MODIFIER
}

model users {
  id                 String               @id
  email              String               @db.VarChar(255)
  theme              String               @default("dark") @db.VarChar(255)
  first_login        Boolean              @default(true)
  crafts             crafts[]
  repositories       repositories[]
  users_repositories users_repositories[]
}

model languages {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  slug   String   @db.VarChar(255)
  crafts crafts[]
}

model repositories {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  slug               String?              @db.VarChar(255)
  user_id            String
  crafts             crafts[]
  users              users                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_repositories users_repositories[]
}

model technologies {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar
  slug                   String                   @db.VarChar
  default                Boolean?
  crafts                 crafts[]
  technologies_providers technologies_providers[]
  parameters             parameters[]
}

model providers {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(255)
  slug                   String                   @db.VarChar(255)
  default                Boolean?
  crafts                 crafts[]
  technologies_providers technologies_providers[]
  parameters             parameters[]
}

model parameters {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  slug              String              @db.VarChar(255)
  content           Json                @db.Json
  technology_id     Int
  provider_id       Int
  technologies      technologies        @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  providers         providers           @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  crafts_parameters crafts_parameters[]
}

model crafts {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  slug              String              @db.VarChar(255)
  content           String
  description       String?
  score             Int                 @default(50)
  created_at        DateTime            @db.Timestamptz(6)
  language_id       Int
  repository_id     Int
  technology_id     Int
  user_id           String
  provider_id       Int?
  type              CRAFT_TYPE          @default(PROMPT)
  languages         languages           @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  repositories      repositories        @relation(fields: [repository_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  technologies      technologies        @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users             users               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  providers         providers?          @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  crafts_parameters crafts_parameters[]
  crafted_by        crafting[]          @relation("crafted_by")
  crafting          crafting[]          @relation("crafting")

  @@unique([slug, language_id, repository_id, technology_id])
}

model crafting {
  crafted_by_id Int
  crafted_by    crafts @relation("crafted_by", fields: [crafted_by_id], references: [id])
  crafting_id   Int
  crafting      crafts @relation("crafting", fields: [crafting_id], references: [id])

  @@id([crafted_by_id, crafting_id])
}

model crafts_parameters {
  craft_id     Int
  parameter_id Int
  value        String?
  parameters   parameters @relation(fields: [parameter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  crafts       crafts     @relation(fields: [craft_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([craft_id, parameter_id])
}

model technologies_providers {
  technology_id Int
  provider_id   Int
  default       Boolean?
  providers     providers    @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  technologies  technologies @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([technology_id, provider_id])
}

model users_repositories {
  user_id       String
  repository_id Int
  repositories  repositories @relation(fields: [repository_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, repository_id])
}
